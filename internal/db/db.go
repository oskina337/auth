package db

import (
	"auth/internal/config"
	"context"
	"fmt"

	"github.com/jackc/pgx/v5/pgxpool"
)

// Client - –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
type Client interface {
	DB() *pgxpool.Pool
	Close()
}

// client - —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, —Ä–µ–∞–ª–∏–∑—É—é—â–∞—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Client
type client struct {
	pool *pgxpool.Pool
}

// DB - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
func (c *client) DB() *pgxpool.Pool {
	return c.pool
}

// Close - –∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î
func (c *client) Close() {
	if c.pool != nil {
		c.pool.Close()
		fmt.Println("üõë –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ")
	}
}

// NewClient - —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç –ë–î
func NewClient() (Client, error) {
	dbDSN := config.LoadConfig()

	pool, err := pgxpool.New(context.Background(), dbDSN)
	if err != nil {
		return nil, fmt.Errorf("‚ùå –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: %w", err)
	}

	fmt.Println("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
	return &client{pool: pool}, nil
}
